From a7cf439409089eab17341a1a24fb9be2b967ca7c Mon Sep 17 00:00:00 2001
From: Takayuki 'January June' Suwa <jjsuwa_sys3175@yahoo.co.jp>
Date: Thu, 27 May 2021 19:04:12 +0900
Subject: [PATCH 21/31] xtensa: Make use of BALL/BNALL instructions

In Xtensa ISA, there is no single machine instruction that calculates unary
bitwise negation, but a few similar fused instructions are exist:

  "BALL  Ax, Ay, label"  // if ((~Ax & Ay) == 0) goto label;
  "BNALL Ax, Ay, label"  // if ((~Ax & Ay) != 0) goto label;

These instructions have never been emitted before, but it seems no reason not
to make use of them.

gcc/ChangeLog:

	* config/xtensa/xtensa.md (*masktrue_bitcmpl): New insn pattern.

gcc/testsuite/ChangeLog:

	* gcc.target/xtensa/BALL-BNALL.c: New.
---
 gcc/config/xtensa/xtensa.md                  | 21 +++++++++++++
 gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c | 33 ++++++++++++++++++++
 2 files changed, 54 insertions(+)
 create mode 100644 gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c

diff --git a/gcc/config/xtensa/xtensa.md b/gcc/config/xtensa/xtensa.md
index 40000859d..b34b2afb6 100644
--- a/gcc/config/xtensa/xtensa.md
+++ b/gcc/config/xtensa/xtensa.md
@@ -1633,6 +1633,27 @@
    (set_attr "mode"	"none")
    (set_attr "length"	"3")])
 
+(define_insn "*masktrue_bitcmpl"
+  [(set (pc)
+	(if_then_else (match_operator 3 "boolean_operator"
+			[(and:SI (not:SI (match_operand:SI 0 "register_operand" "r"))
+				 (match_operand:SI 1 "register_operand" "r"))
+			 (const_int 0)])
+		      (label_ref (match_operand 2 "" ""))
+		      (pc)))]
+  ""
+{
+  switch (GET_CODE (operands[3]))
+    {
+    case EQ:	return "ball\t%0, %1, %2";
+    case NE:	return "bnall\t%0, %1, %2";
+    default:	gcc_unreachable ();
+    }
+}
+  [(set_attr "type"	"jump")
+   (set_attr "mode"	"none")
+   (set_attr "length"	"3")])
+
 
 ;; Zero-overhead looping support.
 
diff --git a/gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c b/gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c
new file mode 100644
index 000000000..ba61c6f37
--- /dev/null
+++ b/gcc/testsuite/gcc.target/xtensa/BALL-BNALL.c
@@ -0,0 +1,33 @@
+/* { dg-do compile } */
+/* { dg-options "-O" } */
+
+extern void foo(void);
+
+void BNONE_test(int a, int b)
+{
+  if (a & b)
+    foo();
+}
+
+void BANY_test(int a, int b)
+{
+  if (!(a & b))
+    foo();
+}
+
+void BALL_test(int a, int b)
+{
+  if (~a & b)
+    foo();
+}
+
+void BNALL_test(int a, int b)
+{
+  if (!(~a & b))
+    foo();
+}
+
+/* { dg-final { scan-assembler-times "bnone" 1 } } */
+/* { dg-final { scan-assembler-times "bany" 1 } } */
+/* { dg-final { scan-assembler-times "ball" 1 } } */
+/* { dg-final { scan-assembler-times "bnall" 1 } } */
-- 
2.20.1

